image: eclipse-temurin:8
stages:
  - test
  - deploy
  - trigger

variables:
  GRADLE_ARGS: --no-daemon --stacktrace --warning-mode=all
  DEBIAN_FRONTEND: noninteractive

cache:
  paths:
    - .gradle/caches
    - .gradle/notifications
    - .gradle/wrapper

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - apt-get update
  - apt-get install -y git

.tests:
  stage: test
  script: ./gradlew ${GRADLE_ARGS} check jacocoTestReport
  artifacts:
    paths:
      - "*/build/jacoco"
      - "*/build/jacocoHtml"
      - "*/build/reports"
      - "*/build/test-results"
    reports:
      junit:
        - "*/build/test-results/**/TEST-*.xml"
    when: always

tests:jdk-8:
  extends: .tests

tests:jdk-11:
  extends: .tests
  image: eclipse-temurin:11

tests:jdk-17:
  extends: .tests
  image: eclipse-temurin:17

tests:jdk-21:
  extends: .tests
  image: eclipse-temurin:21

tests:macos:
  extends: .tests
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
  tags:
    - macos

tests:windows64:
  extends: .tests
  before_script: []
  script: gradlew.bat %GRADLE_ARGS% check jacocoTestReport
  tags:
    - windows

publish:
  stage: deploy
  script:
    - openssl aes-256-cbc -pass "env:ENCRYPTION_PASSWORD" -d -a -md md5 -in secring.gpg.enc       -out secring.gpg 
    - openssl aes-256-cbc -pass "env:ENCRYPTION_PASSWORD" -d -a -md md5 -in pubring.gpg.enc       -out pubring.gpg
    - openssl aes-256-cbc -pass "env:ENCRYPTION_PASSWORD" -d -a -md md5 -in gradle.properties.enc -out gradle.properties
    - ./gradlew ${GRADLE_ARGS} publish
  only: 
    - master 
    - develop

prob_snapshot_parser_tests:
  stage: trigger
  variables:
    BUILD_TYPE: snapshot-parser-build
  trigger:
    project: stups/prob/prob_prolog
  only:
    - develop
