Package de.prob.core.theorymapping;

/*******************************************************************
 * Helpers                                                         *
 *******************************************************************/
Helpers
  any_char = [0x0000 .. 0xffff];

  tab = 9;
  lf = 10;
  cr = 13;
  space = ' ' | tab | lf | cr;
  line_break = [lf + cr];

  digit = ['0'..'9'];
  alpha = [['a'..'z'] + ['A'..'Z']];
  alphanum = [digit + alpha];

/*******************************************************************
 * Tokens                                                          *
 *******************************************************************/
Tokens
  white_space = space*;
  line_comment = '//' [any_char - line_break]* line_break?;

  keyword_op = 'operator';
  keyword_internal = 'internal';
  opname = '"' [any_char - '"']+ '"';
  symbol_open = '{';
  symbol_close = '}';
 /* used to be: internal_spec = alpha (alphanum | '_')*; */
  internal_spec = alpha (alphanum | '_')* | /* identifier */
                  digit+ | /* integer literal */
                  (digit+ '.' digit+) | /* real literal */
                  ('$' [any_char - '$']* '$'); /* formula enclosed in $ */
/*******************************************************************
 * Ignored Tokens                                                  *
 *******************************************************************/
Ignored Tokens
  white_space, line_comment;

/*******************************************************************
 * Productions                                                     *
 *******************************************************************/
Productions

result = {empty} | operatordecl result;
operatordecl = keyword_op opname decltype symbol_open internal_spec symbol_close;
decltype = {internal} keyword_internal;

// end of grammar
