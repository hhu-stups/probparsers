Package de.prob.core.theorymapping;

/*******************************************************************
 * Helpers                                                         *
 *******************************************************************/
Helpers
  space = ' ' | '\t' | 10 | 13;
  underscore = '_';

  cbr_open = '{';
  cbr_close = '}';

  all = [0x0000..0xffff];

  quote = '"';
  nonquote = [all - quote];
  internal_spec_char = [all - cbr_close];

  digit = ['0'..'9'];
  alpha = [['a'..'z'] + ['A'..'Z']];
  alphanum = [digit + alpha];
  dot = '.';

/*******************************************************************
 * Tokens                                                          *
 *******************************************************************/
Tokens
  white_space = space*;

  keyword_op = 'operator';
  keyword_internal = 'internal';
  opname = quote nonquote+ quote;
  symbol_open = cbr_open;
  symbol_close = cbr_close;
 /* used to be: internal_spec = alpha (alphanum | underscore)*; */
  internal_spec = alpha (alphanum | underscore)* | /* identifier */
                  digit+ | /* integer literal */
                  (digit+ dot digit+) | /* real literal */
                  quote nonquote+ quote; /* string literal */

/*******************************************************************
 * Ignored Tokens                                                  *
 *******************************************************************/
Ignored Tokens
  white_space;

/*******************************************************************
 * Productions                                                     *
 *******************************************************************/
Productions

result = {empty} | operatordecl result;
operatordecl = keyword_op opname decltype symbol_open internal_spec symbol_close;
decltype = {internal} keyword_internal;

// end of grammar
