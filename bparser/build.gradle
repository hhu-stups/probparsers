plugins {
	id("jacoco")
	id("java-library")

	id("de.hhu.stups.sablecc")
}

description = "ProB's parser for classical B"

dependencies {
	sableCC(rootProject.sableCCDependency)
	api(rootProject.sableCCRuntimeDependency)
	api project(":prologlib")
	api project(":parserbase")
}

def readCurrentGitCommit() {
	def proc = ["git", "rev-parse", "HEAD"].execute(null, project.projectDir)
	def exitCode = proc.waitFor()
	if (exitCode != 0) {
		throw new IllegalStateException("git rev-parse command exited with status code ${exitCode}:\n" + proc.err.readLines().join("\n"))
	}
	return proc.in.readLines()[0]
}

final currentGitCommit = readCurrentGitCommit()
processResources {
	inputs.property("version", project.version)
	inputs.property("currentGitCommit", currentGitCommit)
	filesMatching("de/be4/classicalb/core/parser/build.properties") {
		expand(version: inputs.properties["version"], git: currentGitCommit)
	}
}

rootProject.setupTestReport(project, ["de.be4.classicalb.core.parser", "de.be4.classicalb.core.preparser"])
