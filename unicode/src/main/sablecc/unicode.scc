Package de.prob.unicode;
Helpers
    /* some duplicates in whitespace and non_identifier_characters, no need to remove them */
    separator = [[[[[[[',' + '<'] + ['&' + ['>' + '=']]]+[['|' + '{'] + ['}' + '(']]]+[[')' + '\'] + ['.' + ':']]] + [[[['\' + 0x2208] + ['/' +  0x2288]] + [[0x2284 + '<'] + [0x2286 + 0x2216]]] + [[['.' + 0x2025] + [0x2115 + 0x2205]] +[[0x2223 + 0x22a5] + ['!' + 0x2200]]]]] +[[[[[0x2229+ 0x25c1]+[0x25b7+ 0x2a64]]+ [[0x2a65 + '%'] + [0x03bb+ 0x2982]]] + [[[0x22c2+ 0x003b]+ [0x2218+ 0xe102]]+ [[0x2297+ 0x2225]+ [0x2254+ 0x2124]]]]+ [[[[0x2227+ '=' ]+ [0x21d2+ 0x21d4]]+ [[0x00ac+ 0x00b7]+ ['~' +  [0x223c + 0x207b]]]]+ [[[0xe100+ 0xe101]+ [0x21f8+ '-']] +  [[0x2192+ 0x2914]+ [0x21a3+ 0x2900]]]]]]+ [[[[[0x21a0+ 0x2916]+ [0x005e+ 0x2228]]+ [[0x2119+ 0x2223]+ [0x2260+ 0x2194]]]+ [[[0xe103+ 0x2264]+ [0x2265+ 0x00f7]]+ [['*' + 0x2217]+ ['-' + 0x2212]]]]+ [[[['#' + 0x2203] + ['+' + 0x21a6]]+ [[0x22a4 + '>'] + [0x2282 +  0x222a]]]+[[0x2209+ '*'] + [0x00d7+ 0x22c3]]]]];
    sqbrackets = ['['+']'];
    space = [[' ' + 9] + [10 + 13]];
	double_quote = '"';
	// letter = [['a' .. 'z'] + ['A' .. 'Z']];
	small_letter =  ['a'..'z'];
	capital_letter = ['A' .. 'Z'];
	letter = small_letter | capital_letter;
	digit = ['0' .. '9'];
    hexdigit = [[digit + ['a' .. 'f']] + ['A' .. 'F']] ;
    underscore = '_';
    
	 // unicode_letter definition from java-1.7.sablecc by Etienne M. Gagnon, http://sablecc.org/java1.7/
  // but removed unicode lambda 0x03bb from [0x03a3..0x03ce]
  unicode_letter =
    [[[0x0041..0x005a] + [0x0061..0x007a]] + [[0x00aa..0x00aa] + [0x00b5..0x00b5]]] |
    [[[0x00ba..0x00ba] + [0x00c0..0x00d6]] + [[0x00d8..0x00f6] + [0x00f8..0x01f5]]] |
    [[[0x01fa..0x0217] + [0x0250..0x02a8]] + [[0x02b0..0x02b8] + [0x02bb..0x02c1]]] |
    [[[0x02d0..0x02d1] + [0x02e0..0x02e4]] + [[0x037a..0x037a] + [0x0386..0x0386]]] |
    [[[0x0388..0x038a] + [0x038c..0x038c]] + [[[0x038e..0x03a1] + [0x03a3..0x03ba]] + [0x03bc..0x03ce]]] |
//    [[[0x0388..0x038a] + [0x038c..0x038c]] + [[0x038e..0x03a1] + [0x03a3..0x03ce]]] | // removed unicode_lambda 0x03bb
    [[[0x03d0..0x03d6] + [0x03da..0x03da]] + [[0x03dc..0x03dc] + [0x03de..0x03de]]] |
    [[[0x03e0..0x03e0] + [0x03e2..0x03f3]] + [[0x0401..0x040c] + [0x040e..0x044f]]] |
    [[[0x0451..0x045c] + [0x045e..0x0481]] + [[0x0490..0x04c4] + [0x04c7..0x04c8]]] |
    [[[0x04cb..0x04cc] + [0x04d0..0x04eb]] + [[0x04ee..0x04f5] + [0x04f8..0x04f9]]] |
    [[[0x0531..0x0556] + [0x0559..0x0559]] + [[0x0561..0x0587] + [0x05d0..0x05ea]]] |
    [[[0x05f0..0x05f2] + [0x0621..0x063a]] + [[0x0640..0x064a] + [0x0671..0x06b7]]] |
    [[[0x06ba..0x06be] + [0x06c0..0x06ce]] + [[0x06d0..0x06d3] + [0x06d5..0x06d5]]] |
    [[[0x06e5..0x06e6] + [0x0905..0x0939]] + [[0x093d..0x093d] + [0x0958..0x0961]]] |
    [[[0x0985..0x098c] + [0x098f..0x0990]] + [[0x0993..0x09a8] + [0x09aa..0x09b0]]] |
    [[[0x09b2..0x09b2] + [0x09b6..0x09b9]] + [[0x09dc..0x09dd] + [0x09df..0x09e1]]] |
    [[[0x09f0..0x09f1] + [0x0a05..0x0a0a]] + [[0x0a0f..0x0a10] + [0x0a13..0x0a28]]] |
    [[[0x0a2a..0x0a30] + [0x0a32..0x0a33]] + [[0x0a35..0x0a36] + [0x0a38..0x0a39]]] |
    [[[0x0a59..0x0a5c] + [0x0a5e..0x0a5e]] + [[0x0a72..0x0a74] + [0x0a85..0x0a8b]]] |
    [[[0x0a8d..0x0a8d] + [0x0a8f..0x0a91]] + [[0x0a93..0x0aa8] + [0x0aaa..0x0ab0]]] |
    [[[0x0ab2..0x0ab3] + [0x0ab5..0x0ab9]] + [[0x0abd..0x0abd] + [0x0ae0..0x0ae0]]] |
    [[[0x0b05..0x0b0c] + [0x0b0f..0x0b10]] + [[0x0b13..0x0b28] + [0x0b2a..0x0b30]]] |
    [[[0x0b32..0x0b33] + [0x0b36..0x0b39]] + [[0x0b3d..0x0b3d] + [0x0b5c..0x0b5d]]] |
    [[[0x0b5f..0x0b61] + [0x0b85..0x0b8a]] + [[0x0b8e..0x0b90] + [0x0b92..0x0b95]]] |
    [[[0x0b99..0x0b9a] + [0x0b9c..0x0b9c]] + [[0x0b9e..0x0b9f] + [0x0ba3..0x0ba4]]] |
    [[[0x0ba8..0x0baa] + [0x0bae..0x0bb5]] + [[0x0bb7..0x0bb9] + [0x0c05..0x0c0c]]] |
    [[[0x0c0e..0x0c10] + [0x0c12..0x0c28]] + [[0x0c2a..0x0c33] + [0x0c35..0x0c39]]] |
    [[[0x0c60..0x0c61] + [0x0c85..0x0c8c]] + [[0x0c8e..0x0c90] + [0x0c92..0x0ca8]]] |
    [[[0x0caa..0x0cb3] + [0x0cb5..0x0cb9]] + [[0x0cde..0x0cde] + [0x0ce0..0x0ce1]]] |
    [[[0x0d05..0x0d0c] + [0x0d0e..0x0d10]] + [[0x0d12..0x0d28] + [0x0d2a..0x0d39]]] |
    [[[0x0d60..0x0d61] + [0x0e01..0x0e2e]] + [[0x0e30..0x0e30] + [0x0e32..0x0e33]]] |
    [[[0x0e40..0x0e46] + [0x0e81..0x0e82]] + [[0x0e84..0x0e84] + [0x0e87..0x0e88]]] |
    [[[0x0e8a..0x0e8a] + [0x0e8d..0x0e8d]] + [[0x0e94..0x0e97] + [0x0e99..0x0e9f]]] |
    [[[0x0ea1..0x0ea3] + [0x0ea5..0x0ea5]] + [[0x0ea7..0x0ea7] + [0x0eaa..0x0eab]]] |
    [[[0x0ead..0x0eae] + [0x0eb0..0x0eb0]] + [[0x0eb2..0x0eb3] + [0x0ebd..0x0ebd]]] |
    [[[0x0ec0..0x0ec4] + [0x0ec6..0x0ec6]] + [[0x0edc..0x0edd] + [0x0f40..0x0f47]]] |
    [[[0x0f49..0x0f69] + [0x10a0..0x10c5]] + [[0x10d0..0x10f6] + [0x1100..0x1159]]] |
    [[[0x115f..0x11a2] + [0x11a8..0x11f9]] + [[0x1e00..0x1e9b] + [0x1ea0..0x1ef9]]] |
    [[[0x1f00..0x1f15] + [0x1f18..0x1f1d]] + [[0x1f20..0x1f45] + [0x1f48..0x1f4d]]] |
    [[[0x1f50..0x1f57] + [0x1f59..0x1f59]] + [[0x1f5b..0x1f5b] + [0x1f5d..0x1f5d]]] |
    [[[0x1f5f..0x1f7d] + [0x1f80..0x1fb4]] + [[0x1fb6..0x1fbc] + [0x1fbe..0x1fbe]]] |
    [[[0x1fc2..0x1fc4] + [0x1fc6..0x1fcc]] + [[0x1fd0..0x1fd3] + [0x1fd6..0x1fdb]]] |
    [[[0x1fe0..0x1fec] + [0x1ff2..0x1ff4]] + [[0x1ff6..0x1ffc] + [0x207f..0x207f]]] |
    [[[0x2102..0x2102] + [0x2107..0x2107]] + [[0x210a..0x2113] + [0x2115..0x2115]]] |
    [[[0x2118..0x211d] + [0x2124..0x2124]] + [[0x2126..0x2126] + [0x2128..0x2128]]] |
    [[[0x212a..0x2131] + [0x2133..0x2138]] + [[0x3005..0x3005] + [0x3031..0x3035]]] |
    [[[0x3041..0x3094] + [0x309b..0x309e]] + [[0x30a1..0x30fa] + [0x30fc..0x30fe]]] |
    [[[0x3105..0x312c] + [0x3131..0x318e]] + [[0x4e00..0x9fa5] + [0xac00..0xd7a3]]] |
    [[[0xf900..0xfa2d] + [0xfb00..0xfb06]] + [[0xfb13..0xfb17] + [0xfb1f..0xfb28]]] |
    [[[0xfb2a..0xfb36] + [0xfb38..0xfb3c]] + [[0xfb3e..0xfb3e] + [0xfb40..0xfb41]]] |
    [[[0xfb43..0xfb44] + [0xfb46..0xfbb1]] + [[0xfbd3..0xfd3d] + [0xfd50..0xfd8f]]] |
    [[[0xfd92..0xfdc7] + [0xfdf0..0xfdfb]] + [[0xfe70..0xfe72] + [0xfe74..0xfe74]]] |
    [[[0xfe76..0xfefc] + [0xff21..0xff3a]] + [[0xff41..0xff5a] + [0xff66..0xffbe]]] |
    [[[0xffc2..0xffc7] + [0xffca..0xffcf]] + [[0xffd2..0xffd7] + [0xffda..0xffdc]]];
    
  unicode_superscripts = [0x2070..0x2079]; // TODO: add 185,178,179
  unicode_subscripts = [0x2080..0x2089];
  unicode_prime = [0x27 + [0x2032 + [8216..8217]]]; // ' primes / quotes  TODO: add hats
  unicode_lambda = 0x03bb;
  
Tokens
	string = double_quote ([[0x0000 .. 0xffff] - [double_quote + '\']] | '\' [0x0000 .. 0xffff])* double_quote;
    typeof_open = '/*';
    typeof_close = '*/';
    truncated_set_size = ('#' | '\#') digit+;
	in = ':' | '\in' | 0x2208;
	notsubseteq = '/<:' | '\notsubseteq' | 0x2288;
	notsubset = '/<<:'  | '\notsubset'   | 0x2284;
	subseteq = '<:'     | '\subseteq'    | 0x2286;
	setminus = '\'      | '\setminus'    | 0x2216;
	dotdot = '..'     | '\upto'  | 0x2025;
	dotdotdot = '...' | '\ldots' | 0x2026; 
	nat1 = 'NAT1' | '\nat1'| 0x2115 0x0031 | 0x2115 0x2081;
	nat = 'NAT'   | '\nat' | 0x2115;
	emptyset = '{}' | '\emptyset'| 0x2205;
	bcmsuch = ':|' | '\bcmsuch'| ':'0x2223;
	bfalse = 'false' | '\bfalse'| 0x22a5;
	forall = '!'   | '\forall'| 0x2200;
	exists = '#'   | '\exists'| 0x2203;
    mapsto = '|->' | '\mapsto'| 0x21a6;
	btrue = 'true' | '\btrue'| 0x22a4;
	subset = '<<:' | '\subset'| 0x2282;
	bunion = '\/'  | '\bunion'| 0x222a;
	binter = '/\'  | '\binter'| 0x2229;
	domres = '<|'  | '\domres'| 0x25c1;
	ranres = '|>'  | '\ranres'| 0x25b7;
	domsub = '<<|' | '\domsub'| 0x2a64 | 0x25c0;
	ransub = '|>>' | '\ransub'| 0x2a65 | 0x25b6;
	lambda = '%' | '\lambda'| 0x03bb;
	oftype = 'oftype' |'\oftype'| 0x2982;
	notin = '/:' |  '\notin'| 0x2209;
	cprod = '**' | '\cprod' | 0x00d7;
	union = 'UNION' | '\Union'| 0x22c3;
	inter = 'INTER' | '\Inter'| 0x22c2;
	fcomp = '\fcomp'| 0x003b;
	bcomp = 'circ'  | '\bcomp'| 0x2218;
	dprod = '><' | '\dprod'| 0x2297;
	pprod = '||' | '\pprod'| 0x2225;
	bcmeq = ':=' | '\bcmeq'| 0x2254;
	bcmin = '::' | '\bcmin'| ':'0x2208;
	intg = 'INT' | '\intg' | 0x2124;
	land = '&'   | '\land' | 0x2227;
	lor = 'or' | '\lor'| 0x2228;
	limp = '=>'  | '\limp' | 0x21d2;
	leqv = '<=>' | '\leqv' | 0x21d4;
	lnot = 'not' | '\lnot' | 0x00ac;
	qdot = '.'   | '\qdot' | 0x00b7;
	conv = '~' | '\conv'
	           | 0x223c // Unicode tilde
	           | 0x207b 0xb9; // superscript 1 is ASCII 185
	trel = '<<->'  | '\trel'| 0xe100;
	srel = '<->>'  | '\srel'| 0xe101;
	strel = '<<->>'| '\strel'| 0xe102;
	pfun = '+->'   | '\pfun'| 0x21f8;
	tfun = '-->'   | '\tfun'| 0x2192;
	pinj = '>+>'   | '\pinj'| 0x2914;
	tinj = '>->'   | '\tinj'| 0x21a3;
	psur = '+>>'   | '\psur'| 0x2900;
	tsur = '->>'   | '\tsur'| 0x21a0;
	tbij = '>->>'  | '\tbij'| 0x2916;
	expn = '\expn' | 0x005e;
	pow1 = 'POW1' | '\pow1'| 0x2119 0x0031 | 0x2119 0x2081;
	pow =  'POW'  | '\pow' | 0x2119;
	mid =  '\mid' | '|'    | 0x2223;
	neq = '/='  | '\neq'| 0x2260;
	rel = '<->' | '\rel'| 0x2194;
	ovl = '<+'  | '\ovl'| 0xe103 | 0x22d6;
	leq = '<='  | '\leq'| 0x2264;
	geq = '>='  | '\geq'| 0x2265;
	div = '/'   | '\div'| 0x00f7;
	mult = '*'  | 0x2217;
	minus = '-' | 0x2212;
	lbrace = '{' | '\{';
	rbrace = '}' | '\}';

	take = '/|\';
	drop = '\|/';
    
    number = digit (digit)*; // is now somewhat redundant; since identifier_literal allowed to start with number
    
    hex_literal = '0x' hexdigit+;
    real_literal = digit+ '.' digit+ ('E' | 'e') ('+' | '-')? digit+ | digit+ '.' digit+;
    
    identifier_literal = (unicode_letter | underscore | digit) (unicode_letter | unicode_lambda | digit | underscore)* (unicode_subscripts)* (unicode_prime)* ;
    // note: we deliberately extend the notion of identifier here to start with underscore and digits
    // x=2or x=3  -> is valid in classical B; but is not converted by the Unicode translator of Rodin

	whitespace = space*;
	separator = separator | sqbrackets;
	
	any_char = ([[0x0000 .. 0xffff] - double_quote]); 
	// removed * at end; with maximal munching this poses problems e.g. for f~ or f<+g
	// This problem was solved by duplicating a lot of symbols in the separator class; this is not very elegant
	
