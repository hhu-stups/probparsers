package de.prob.parser;

import org.openjdk.jmh.annotations.Benchmark;
import org.openjdk.jmh.annotations.Scope;
import org.openjdk.jmh.annotations.State;
import org.openjdk.jmh.infra.Blackhole;

@State(Scope.Benchmark)
@SuppressWarnings("unused")
public class ListParseBenchmark {

	@Benchmark
	public void parse(Blackhole bh) {
		String text = "yes('.'(=('Prefs','.'(preference('MAXINT',nat1,'value of MAXINT, controls enumeration of integers and used to define NAT in classical B (2147483647 for 32 bit ints)',animation,3),'.'(preference('MININT',neg,'value of MININT, controls enumeration of integers and used to define INT in classical B (-2147483648 for 32 bit ints)',animation,-1),'.'(preference('DEFAULT_SETSIZE',nat,'Size of unspecified deferred sets in SETS section',animation,2),'.'(preference('MAX_INITIALISATIONS',nat,'Max Number of Initialisations and Constant-Setups Computed',animation,4),'.'(preference('MAX_OPERATIONS',nat,'Max Number of Enablings per Operation Computed',animation,10),'.'(preference('TIME_OUT',nat1,'Time out for computing enabled transitions (in ms, is multiplied by a factor for other computations, value 2147483646 turns time outs off)',animation,2500),'.'(preference('NUMBER_OF_ANIMATED_ABSTRACTIONS',nat,'How many levels of refined Event-B models are animated by default',animation,20),'.'(preference('NUMBER_OF_SKIPPED_REFINEMENTS',nat,'How many levels of concrete Event-B refinements are skipped for animagtion',animation,0),'.'(preference('USE_RECORD_CONSTRUCTION',bool,'Records: Check if axioms/properties describe a record pattern',advanced,true),'.'(preference('USE_IGNORE_PRAGMAS',bool,'Ignore predicates with prob-ignore labels or /*@desc prob-ignore */ pragmas when checking PROPERTIES/axioms',advanced,false),'.'(preference('COMPRESSION',xbool,'Use more aggressive COMPRESSION when storing states (false: off, true: compromise between speed and memory, full: preserve more memory)',advanced,false),'.'(preference('OPERATION_REUSE',xbool,'Reuse previously computed operation effects in B/Event-B (cache projected state space per operation)',advanced,false),'.'(preference('PROOF_INFO',bool,'Use PROOF information to restrict invariant checking to affected clauses.',advanced,true),'.'(preference('RANDOMISE_ENUMERATION_ORDER',bool,'Randomise enumeration of variables.',advanced,false),'.'(preference('ENUMERATION_ORDER_ANALYSIS',bool,'Perform enumeration order analysis within quantifiers, e.g., to detect identifiers that should not be enumerated',advanced,true),'.'(preference('TRY_FIND_ABORT',xbool,'Try more aggressively to detect not well-defined expressions (e.g. applying function outside of domain), may slow down animator; possible values false,true,full',animation,false),'.'(preference('CLPFD',bool,'Use CLP(FD) solver for B integers (restricts range to -2^28..2^28-1 on 32 bit machines)',animation,true),'.'(preference('CHR',bool,'Use CHR based solver. Should speed up detection of unsolvable predicates, but might slow down solving in general.',animation,false),'.'(preference('SMT',bool,'Enable SMT-Mode (aggressive treatment of : and /: inside predicates)',advanced,false),'.'(preference('SYMBOLIC',bool,'Lazy expansion of lambdas and set comprehensions',animation,false),'.'(preference('SOLVER_STRENGTH',nat,'Strength of certain Solver propagations (0 is default)',advanced,0),'.'(preference('REMOVE_IMPLIED_CONSTRAINTS',bool,'Remove unnecessary constraints implied by other constraints',advanced,false),'.'(preference('LIFT_EXISTS',bool,'Lift existential quantifiers, i.e., treat existentially quantified variables like ordinary variables',advanced,false),'.'(preference('CSE',bool,'Enable CSE (Common Subexpression Elimination)',advanced,false),'.'(preference('STATIC_ORDERING',bool,'Use static ordering to enumerate constants which occur in most PROPERTIES first',advanced,false),'.'(preference('SYMMETRY_MODE','.'(off,'.'(flood,'.'(nauty,'.'(hash,[])))),'Symmetry Mode: off,flood,canon,nauty,hash',hidden,off),'.'(preference('STATIC_SYMMETRY_DETECTION',bool,'Detect symmetries in forall/exists and in PROPERTIES for deferred sets',advanced,true),'.'(preference('RAISE_ABORT_IMMEDIATELY',xbool,'Raise potential well-definedness issues immediately (may lead to false spurious alarms, but can allow to better detect WD issues which lead to timeouts; possible values false,true,full)',advanced,false),'.'(preference('KODKOD',bool,'Apply translation to KODKOD on PROPERTIES when loading machines',hidden,false),'.'(preference('MEMO',bool,'MEMOize expansions of set comprehensions and lambda abstractions.',advanced,false),'.'(preference('MEMOIZE_FUNCTIONS',bool,'MEMOIZE function applications of all functions defined in ABSTRACT_CONSTANTS (even if not marked with /*@desc memo */).',advanced,false),'.'(preference('RANDOMISED_RESTART_INIT',bool,'Use Randomised Restart for Initialisation and Constant Setup (only makes sense if RANDOMISE_ENUMERATION_ORDER is set; for an operation OP use MAX_OPERATIONS_OP == -Nr)',advanced,false),'.'(preference('OPTIMIZE_AST',bool,'Optimize AST (Abstract Syntax Tree) before passing to ProB kernel (rewrites many B predicates into more efficient form)',advanced,true),'.'(preference('USELESS_CODE_ELIMINATION',bool,'Useless Code Elimination: try and find useless statements which have no influence on the result of an operation.',advanced,false),'.'(preference('DETECT_LAMBDAS',bool,'Detect set comprehensions which can be rewritten into lambdas.',advanced,true),'.'(preference('AUTO_DETECT_THEORY_MAPPING',bool,'Try and detect mappings of Rodin axiomatic theory operators based on name.',advanced,false),'.'(preference('PROB_VERSION_INFO',string,'Version of ProB (read-only preference)',hidden,'1.12.3-nightly'),'.'(preference('PROB_REVISION_INFO',string,'Git revision of ProB (read-only preference)',hidden,e5fb845ffbd87ab2c8250f2a2fde35c14580fe3b),'.'(preference('PROB_LASTCHANGED_INFO',string,'Last change date of ProB source (read-only preference)',hidden,'Tue Oct 31 17:49:39 2023 +0100'),'.'(preference('NORMALIZE_AST',bool,'Normalize AST before passing to ProB kernel (rewrites many B predicates into simpler form)',hidden,false),'.'(preference('DATA_VALIDATION',bool,'Assume everything can be computed without constraint solving.',advanced,false),'.'(preference('KODKOD_ONLY_FULL',bool,'Translate only complete components to KODKOD',advanced,true),'.'(preference('KODKOD_RAISE_WARNINGS',bool,'Raise WARNING when component or predicate cannot be translated to KODKOD',advanced,false),'.'(preference('KODKOD_MAX_NR_SOLS',nat1,'Maximum number of solutions computed and sent by KODKOD per batch.',advanced,22),'.'(preference('KODKOD_SYMMETRY',nat,'Symmetry level for Kodkod (0=off, 20=on),  the higher this value, the more symmetries will be broken, you should probably only turn this on when MAX_INITIALISATIONS is set to 1',advanced,0),'.'(preference('KODKOD_SAT_SOLVER','.'(sat4j,'.'(minisat,'.'(lingeling,'.'(glucose,[])))),'SAT solver used for Kodkod (sat4j, minisat, lingeling, glucose)',advanced,sat4j),'.'(preference('CSE_PRED',bool,'Apply CSE (if enabled) also to predicates',advanced,true),'.'(preference('CSE_WD_ONLY',bool,'Apply CSE (if enabled) only to well-defined sub-formulas',advanced,false),'.'(preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',bool,'Allow ProB to proceed even if only part of the CONSTANTS have been found.',advanced,false),'.'(preference('PARTITION_PROPERTIES',bool,'Partition predicates (PROPERTIES) into components',advanced,true),'.'(preference('PARTITION_PROPERTIES_INLINE',bool,'Inline equalities when partitioning into components',advanced,true),'.'(preference('SHOW_EVENTB_ANY_VALUES',bool,'Show top-level ANY variable values of B Operations without parameters as parameters',animation,false),'.'(preference('RANDOMISE_OPERATION_ORDER',bool,'Randomise order of operations when computing successor states.',advanced,false),'.'(preference('EXPAND_FORALL_UPTO',nat,'When analysing predicates: max. domain size for expansion of forall',advanced,100),'.'(preference('MAX_DISPLAY_SET',int,'Max size for pretty-printing sets (-1 means no limit)',advanced,100),'.'(preference('SHOW_FORMULA_FUNCTOR',int,'Show prefix/infix operators in state view for formulas longer than (use -1 to disable feature):',advanced,-1),'.'(preference('SHOW_FORMULA_PROOF_INFO',bool,'Show proof info icon in state view (currently only for Event-B):',advanced,false),'.'(preference('SHOW_FORMULA_EXPLANATIONS',bool,'Show explanation nodes in state view for certain formulas (e.g., <:, ...)',advanced,false),'.'(preference('ENUMERATE_INFINITE_TYPES',bool,'Allow enumeration of infinite types',advanced,true),'.'(preference('WARN_IF_DEFINITION_HIDES_VARIABLE',bool,'Warn if a DEFINITION hides a variable with the same name',advanced,true),'.'(preference('TYPE_CHECK_DEFINITIONS',bool,'Type check all visible DEFINITIONs (not just used ones)',advanced,false),'.'(preference('TRACE_INFO',bool,'Provide various tracing information on the terminal/console.',advanced,false),'.'(preference('PERFORMANCE_INFO',bool,'Provide performance monitoring information on the terminal/console.',advanced,false),'.'(preference('PERFORMANCE_INFO_LIMIT',int,'Limit in ms for printing warnings when expanding comprehension sets in performance monitoring mode.',advanced,100),'.'(preference('DOUBLE_EVALUATION',bool,'Evaluate PREDICATES positively and negatively when analysing',advanced,true),'.'(preference('PROB_SAFE_MODE',bool,'Perform additional safety checks, which can slow down ProB',advanced,false),'.'(preference('IGNORE_HASH_COLLISIONS',bool,'Ignore hash collisions in state space (if true not all states may be computed!)',advanced,false),'.'(preference('USE_SCOPE_DEFINITION',bool,'Use SCOPE predicate (if defined) to restrict state space exploration for model checking and animation.',advanced,true),'.'(preference('FORGET_STATE_SPACE',bool,'Do not remember state space (mainly useful in conjunction with IGNORE_HASH_COLLISIONS)',advanced,false),'.'(preference('SAFETY_MODEL_CHECK',bool,'Only store one incoming transition/operation per reached state. Can be used when model checking of safety properties (invariants, goal, assertions). Do not use for LTL model checking, deadlock checking or animation.',advanced,false),'.'(preference('LTL_SAFETY_MODEL_CHECK',bool,'Recognise safety properties and check these using the safety property model checker (requires ltl2ba for more complex properties)',model_checker,true),'.'(preference('JVM_PARSER_HEAP_MB',nat,'Heap size in MB for Java parser (-Xmx JVM option, 0 means default value)',advanced,0),'.'(preference('JVM_PARSER_ARGS',string,'Additional arguments sent to the JVM for the Java parser (e.g., \"-XX:+UseG1GC -Xss5m\")',advanced,''),'.'(preference('JVM_PARSER_POSITION_INFOS',bool,'Produce detailed position information in the Java parser (turn off to reduce memory consumption for very large B machines; change requires restarting ProB)',advanced,true),'.'(preference('CSP_STRIP_SOURCE_LOC',bool,'Strip CSP source-location information (for RHS of processes, except for internal choice)',csp_prefs,false),'.'(preference('INVARIANT_CHECKING',bool,'Check invariant while animating and model checking',advanced,true),'.'(preference('ASSERT_CHECKING',bool,'Check ASSERT statements while animating and model checking',advanced,true),'.'(preference('ALLOW_SIMULTANEOUS_ASSIGNMENTS',bool,'Allow B operations to assign multiple times to same variable (ASM style)',hidden,false),'.'(preference('ALLOW_REALS',dbool,'Allow to use the REAL datatype',advanced,default),'.'(preference('BUGLY',bool,'Scramble identifiers when pretty-printing (BUGLY)',advanced,false),'.'(preference('ATELIERB_KRT_PATH',path,'Path to Atelier B Provers krt tool',advanced,krt),'.'(preference('JAVA_PATH',path,'Path to the \"java\" command (in case java is not found on the PATH)',advanced,java),'.'(preference('JAVA_PARSER_PATH',path,'Provide alternate path to the \"probcliparser.jar\" JAR file or \"cliparser\" Graal VM binary (by default ProB will use parser in lib folder)',hidden,''),'.'(preference('TRY_ATELIERB_PROVERS',bool,'Try Atelier B Provers for unknown SMTLIB specifications',advanced,false),'.'(preference('SMTLIB_BOOL_ARRAYS_TO_SETS',bool,'Translate SMTLib boolean Arrays to B Sets (when processing .smt2 files)',smtlib2b,false),'.'(preference('SMTLIB_PREPROCESS',bool,'Preprocess before solving SMTLib formulas (when processing .smt2 files)',smtlib2b,false),'.'(preference('SYMBOLIC_MC_TRY_OTHER_SOLVERS',bool,'Symbolic Model Checking: Try different solver / settings combinations',advanced,false),'.'(preference('CSE_SUBST',bool,'Apply CSE (if enabled) also to substitutions (operation/event bodies) [EXPERIMENTAL]',advanced,false),'.'(preference('SMT_SUPPORTED_INTERPRETER',bool,'Use Z3 / CVC4 for predicates inside the B interpreter',advanced,false),'.'(preference('SAT_SUPPORTED_INTERPRETER',bool,'Use Kodkod for specific predicates inside the B interpreter',advanced,false),'.'(preference('PP_FROZEN_INFOS',bool,'Print Prolog frozen goal infos for unbound variables',hidden,false),'.'(preference('PP_SEQUENCES',bool,'Print B relations as sequences when possible during pretty-printing.',hidden,false),'.'(preference('PP_CS_STYLE_SEQUENCES',bool,'Print B sequences in theoretical CS style without separators.',hidden,false),'.'(preference('STRING_AS_SEQUENCE',bool,'Allow sequence operators (^) to be applied to STRINGs',animation,true),'.'(preference('COMPILE_WHILE',bool,'Compile bodies of WHILE loops if variant large',advanced,true),'.'(preference('PGE','.'(off,'.'(disabled,'.'(enabled,'.'(full,'.'(disabled2,'.'(enabled2,'.'(full2,[]))))))),'Use the Partial Guard Evaluation optimisation for the state space exploration of B models.',model_checker,off),'.'(preference('DOT_PROP',bool,'Show properties of statespace node (useful for CSP models)',dot,false),'.'(preference('DOT_IDS',bool,'Print Node Identifiers',dot,false),'.'(preference('DOT_TRANS_IDS',bool,'Print Transition Identifiers for state space',dot,false),'.'(preference('DOT_INFO',bool,'Print Node information (values of variables)',dot,true),'.'(preference('DOT_LOOPS',bool,'Print Self-Loops',dot,true),'.'(preference('DOT_ARC_COLORS',bool,'Colour the arcs (disable for import in OmniGraffle)',dot,true),'.'(preference('DOT_FUNCTIONS',bool,'Print Functions (operations that return values w/o changing state)',dot,false),'.'(preference('DOT_ROOT',bool,'Print Root Node',dot,true),'.'(preference('DOT_EDGE_LABELS',bool,'Show Edge Labels (Operation Names)',dot,true),'.'(preference('DOT_ARGUMENTS',bool,'Print Operation Arguments (when Edge Labels shown)',dot,true),'.'(preference('DOT_COLOR_ARC',rgb_color,'Colour for normal arcs',dot,'#006391'),'.'(preference('DOT_COLOR_NODE',rgb_color,'Colour for normal node',dot,'#99BF38'),'.'(preference('DOT_COLOR_NODE_ERROR',rgb_color,'Colour for invariant violation',dot,'#FF3800'),'.'(preference('DOT_COLOR_NODE_OPEN',rgb_color,'Colour for open node (red,green,blue,gray,... or rgb hex #ff00ff) or adjacent to an open node if print leaves is off',dot,'#F4E3C1'),'.'(preference('DOT_COLOR_NODE_GOAL',rgb_color,'Colour for nodes satisfying the GOAL predicate',dot,orange),'.'(preference('DOT_PEN_WIDTH',nat,'Pen width for nodes',dot,2),'.'(preference('DOT_EDGE_PEN_WIDTH',nat,'Pen width for edges',dot,1),'.'(preference('DOT_SHOW_OP_READ_WRITES',bool,'Show read/write info for enabling diagrams',dot,true),'.'(preference('DOT',path,'Path/Command for dot program (using \"/\" even on Windows. Try avoiding spaces in path)',dot,dot),'.'(preference('DOT_ENGINE','.'(dot,'.'(neato,'.'(sfdp,'.'(fdp,'.'(twopi,'.'(circo,'.'(patchwork,'.'(osage,'.'(nop,'.'(nop2,[])))))))))),'Default layout engine used for dot (dot,neato,sfdp,fdp,twopi,circo)',dot,dot),'.'(preference('DOT_DECOMPOSE_NODES',bool,'Decompose sets and complex pairs into individual vertices',dot_state_graph,true),'.'(preference('TK_CUSTOM_STATE_VIEW_PADDING',nat,'Padding (in pixels) between images of custom TK state viewer',animation,0),'.'(preference('TK_CUSTOM_STATE_VIEW_STRING_PADDING',nat,'Padding (in pixels) between strings of custom TK state viewer',animation,10),'.'(preference('TK_CUSTOM_STATE_VIEW_FONT_NAME',string,'Font for animation strings (if empty, the editor font will be used)',hidden,''),'.'(preference('TK_CUSTOM_STATE_VIEW_FONT_SIZE',nat,'Font size for animation strings (if 0, the editor font size will be used)',hidden,0),'.'(preference('TK_CUSTOM_STATE_VIEW_VISIBLE',bool,'Use custom Tk viewer to represent state of B Machine',hidden,true),'.'(preference('ALLOW_UNTYPED_IDENTIFIERS','.'(true,'.'(false,'.'(true_with_string_type,[]))),'Allow UNTYPED identifiers (they will be assigned new deferred sets as type)',hidden,false),'.'(preference('ALLOW_LOCAL_OPERATION_CALLS',bool,'Allow to call (local) operations in same machine',advanced,false),'.'(preference('ALLOW_OPERATION_CALLS_IN_EXPRESSIONS',bool,'Allow to call query operations in (some) expressions',advanced,false),'.'(preference('ALLOW_COMPLEX_LETS',bool,'Allow LET substitutions to directly use introduced identifiers (e.g., LET x,y BE x=4 & y=x*x IN ...)',advanced,false),'.'(preference('REQUIRE_OUTPUT_ASSIGNMENT',bool,'Require operations to assign to all outputs',animation,false),'.'(preference('ALLOW_OUTPUT_READING',bool,'Allow B operations to read output parameters; output values will be initialised to default value in animator.',advanced,false),'.'(preference('ALLOW_OPERATION_CALLS_FOR_USES',bool,'Allow to call B read-only operations of used machines (via USES clauses); permitted by BToolkit but not Atelier-B',advanced,false),'.'(preference('REPL_UNICODE',bool,'Use UNICODE in REPL and editing window',syntax_highlighting,false),'.'(preference('REPL_CACHE_PARSING',bool,'Cache parsing in REPL (useful if same formula gets parsed multiple times, e.g., for Latex processing)',hidden,false),'.'(preference('CACHE_OPERATIONS',bool,'Cache operations/events when -cache is activated',hidden,true),'.'(preference('LATEX_ENCODING',text_encoding,'Encoding used for Latex processing with -latex (auto,ISO-8859-1,ISO-8859-2,UTF-8,UTF-16,...)',latex,auto),'.'(preference('LATEX_GREEK_IDENTIFIERS',bool,'Prety-print Greek identifiers (Sigma,...) in Latex mode',latex,false),'.'(preference('XML_ENCODING',text_encoding,'Encoding used for XML processing, e.g., with -logxml (auto,ISO-8859-1,ISO-8859-2,UTF-8,UTF-16,...)',hidden,auto),'.'(preference('BBRESULTS',bool,'Show probcli errors using the BBEdit (11.6 or newer) bbresults command',hidden,false),'.'(preference('IGNORE_PRJ_TYPES',bool,'Ignore types of prj1 and prj2 (i.e., prj1({1},{1})(2,3) is considered well-defined',advanced,false),'.'(preference('FILTER_UNUSED',bool,'Filter out unused constants (can interfere with VisB or other visualisations)',advanced,false),'.'(preference('DISPROVER_MODE',bool,'Assume that well-definedness is guaranteed or checked by other means (for Rodin DISPROVER Plugin)',advanced,false),'.'(preference('TRACE_UPON_ERROR',bool,'Trace upon error (requires running from source)',hidden,false),'.'(preference('NDJSON_ERROR_LOG_FILE',path,'File were all errors and warnings are logged (NDJSON format). Can be set to stderr or stdout.',advanced,''),'.'(preference('STRICT_RAISE_WARNINGS',bool,'Treat warnings as errors (Warning: can generate spurious NOT-WELL-DEFINED messages).',advanced,false),'.'(preference('STRICT_RAISE_ENUM_WARNINGS',bool,'Treat ENUMERATION warnings (aka VIRTUAL TIME-OUTS) as errors (Warning: can generate spurious NOT-WELL-DEFINED messages).',hidden,false),'.'(preference('STRICT_CLASH_CHECKING',bool,'Do a stricter checking for name CLASHES in B machines',advanced,false),'.'(preference('EDITOR',path,'Path to external text editor for probcli (uses EDITOR environment variable by default)',hidden,vi),'.'(preference('EDITOR_GUI',path,'Path to external GUI text editor',advanced,''),'.'(preference('TLC_WORKERS',nat1,'Number of parallel workers for external tool TLC (for -workers option)',hidden,2),'.'(preference('LTSMIN',path,'Path to LTSmin commands, such as  prob2lts-sym for symbolic model checking (not available for Windows.)',advanced,'./lib/'),'.'(preference('INTERNAL_ARGUMENT_PREFIX',string,'Prefix of internal operation arguments (these are not included in test cases)',advanced,'$none'),'.'(preference('MINIMAL_TEST_SUITES',bool,'Generate minimal suite of mcm testcases (and not one per event)',advanced,true),'.'(preference('ALLOW_NEW_OPERATIONS_IN_REFINEMENT',bool,'Allow introduction of new operations in refinements (automatically set to TRUE for SYSTEM machines)',advanced,false),'.'(preference('ALLOY_USE_IMPLEMENTABLE_INTEGERS',bool,'Use INT (minint..maxint) for the translation from Alloy to B.',alloy2b,false),'.'(preference('ALLOY_SCOPELESS_TRANSLATION',bool,'Do not set any scopes when translating an Alloy model to B (useful for proof assistants).',alloy2b,false),'.'(preference('ALLOY_TRANSLATION_FOR_PROOF',bool,'Translate only a single command of an Alloy model to the B machine assertions section to enable generation of proof obligations in AtelierB.',alloy2b,false),'.'(preference('ALLOY_STRICT_INTEGERS',bool,'Only accept integers (i.e, singleton sets in Alloy) as arguments to integer operations. Otherwise, a well-definedness error is thrown.',alloy2b,true),'.'(preference('DOT_EVENT_HIERARCHY_HORIZONTAL',bool,'Organize refinements horizontally',dot_event_hierarchy,true),'.'(preference('DOT_EVENT_HIERARCHY_MCH_COL',rgb_color,'Colour for machine event cluster',dot_event_hierarchy,gray95),'.'(preference('DOT_EVENT_HIERARCHY_REF_COL',rgb_color,'Colour for events refining themselves (i.e., not renamed and modifying guard or action)',dot_event_hierarchy,'#C0A060'),'.'(preference('DOT_EVENT_HIERARCHY_NEW_COL',rgb_color,'Colour for new events (not refining any event)',dot_event_hierarchy,'#C06040'),'.'(preference('DOT_EVENT_HIERARCHY_RENAME_COL',rgb_color,'Colour for renamed events (with change in guard or action)',dot_event_hierarchy,'#E0E0A0'),'.'(preference('DOT_EVENT_HIERARCHY_RENAME_UNCHG_COL',rgb_color,'Colour for renamed unchanged events',dot_event_hierarchy,'#E0F0E0'),'.'(preference('DOT_EVENT_HIERARCHY_UNCHG_COL',rgb_color,'Colour for unchanged events (not renamed, no guards or actions added)',dot_event_hierarchy,gray92),'.'(preference('DOT_EVENT_HIERARCHY_GRD_STRGTH_COL',rgb_color,'Colour for events just adding a guard (not renamed, no actions added)',dot_event_hierarchy,gray83),'.'(preference('DOT_EVENT_HIERARCHY_GRD_KEEP_COL',rgb_color,'Colour for events just changing an action (not renamed, keeping guard unchanged)',dot_event_hierarchy,'#E0C080'),'.'(preference('DOT_EVENT_HIERARCHY_EDGE_COL',rgb_color,'Edge colour for refine relation',dot_event_hierarchy,'#806040'),'.'(preference('DOT_EVENT_HIERARCHY_EXTENDS_COL',rgb_color,'Edge colour for extends relation',dot_event_hierarchy,gray50),'.'(preference('DOT_USE_CONSTANTS',bool,'Use constants for deferred set values if possible',dot,true),'.'(preference('DOT_ROOT_SHAPE',dot_shape,'Shape for root node (invtriangle,triangle, ellipse, box, diamond,...)',dot,invtriangle),'.'(preference('DOT_NORMAL_NODE_SHAPE',dot_shape,'Shape for normal node',dot,box),'.'(preference('DOT_CURRENT_NODE_SHAPE',dot_shape,'Shape for current node',dot,doubleoctagon),'.'(preference('DOT_SCOPE_LIMIT_COL',rgb_color,'Colour for open, but uninteresting nodes (red,green,blue,gray,... or rgb hex #ff00ff)',dot,gray),'.'(preference('DOT_FILL_NORMAL_NODES',bool,'Fill normal nodes with color',dot,false),'.'(preference('DOT_NODE_FONT_SIZE',nat1,'Font Size for Node labels',dot,12),'.'(preference('DOT_EDGE_FONT_SIZE',nat1,'Font Size for Edge labels',dot,12),'.'(preference('DOT_LIMIT_PAGE_SIZE',bool,'Limit page size by default (does not affect all dot graphs)',dot,true),'.'(preference('DOT_HORIZONTAL_LAYOUT',bool,'Use horizontal layout by default (does not affect all dot graphs)',dot,false),'.'(preference('DOT_COLOUR_GOAL',bool,'Colour the nodes that satisfy the GOAL predicate',dot,true),'.'(preference('DOT_DEFINITIONS_USE_SUB_GRAPH',bool,'Show expression-, predicate-, substitution-DEFINITIONS as sub-graphs',dot_definitions,true),'.'(preference('DOT_DEFINITIONS_SHOW_ALL',bool,'Show all DEFINITIONS',dot_definitions,false),'.'(preference('DOT_PROJECTION_NON_DET_COL',rgb_color,'Edge colour for deterministic edges',dot_projection,'#806040'),'.'(preference('DOT_PROJECTION_DET_COL',rgb_color,'Edge colour for non-deterministic edges',dot_projection,black),'.'(preference('DOT_PROJECTION_NON_DEF_COL',dot_line_style,'Style for non-definite edges (solid,dashed,dotted,bold,invis)',dot_projection,dashed),'.'(preference('DOT_PROJECTION_DEF_COL',dot_line_style,'Style for definite edges (solid,dashed,dotted,bold,invis)',dot_projection,solid),'.'(preference('DOT_PROJECTION_LABEL_LIMIT',nat,'Max. nr of characters for node labels',dot_projection,75),'.'(preference('DOT_PROJECTION_ONLY_EXPLORED_NODES',bool,'Project only on the explored nodes',dot_projection,false),'.'(preference('DOT_USE_UNICODE',bool,'Use Unicode symbols for values and formulas',dot_projection,true),'.'(preference('DOT_PREDICATE_NODE_SHAPE',dot_shape,'Shape for predicate nodes in formula trees',dot_formula_tree,rect),'.'(preference('DOT_EXPRESSION_NODE_SHAPE',dot_shape,'Shape for expression nodes in formula trees',dot_formula_tree,record),'.'(preference('DOT_VARIABLE_MODIFICATION_HIDE_ONLY_WRITTEN',bool,'Hide variables which are only written and not read in any guard',dot_variable_modification,false),'.'(preference('DOT_MACHINE_HIERARCHY_MAX_IDS',int,'Max. number of identifiers shown in hierarchy view (-1 to show all)',dot_machine_hierarchy,0),'.'(preference('CBC_PROVIDE_EXPLANATIONS',bool,'Provide explanations (unsat core,...) for some CBC commands',cbc_commands,false),'.'(preference('SYNTAX_HIGHLIGHT',bool,'Enable Syntax Colour Highlighting',syntax_highlighting,true),'.'(preference('WD_IGNORE_EXTERNAL',bool,'Do not create (unprovable) WD PO for external functions with WD condition',wd_analyser,false),'.'(preference('WD_IGNORE_FINITE_POS',bool,'Do not generate finite WD POs',wd_analyser,false),'.'(preference('WD_ANALYSIS_FOR_ANIMATION',bool,'Perform the WD analysis in the context of ProB animation (e.g., deferred sets considered finite)',wd_analyser,true),'.'(preference('Z3_SOLVE_FOR_ANIMATION',bool,'Perform SMT solving with Z3 in the context of ProB animation (e.g., deferred sets considered finite)',advanced,true),'.'(preference('ADD_WD_POS_FOR_Z3',bool,'Add well-definedness POs to constraints before translating to SMT-LIB',advanced,true),'.'(preference('TABLE_COLUMN_LIMIT',int,'Translation/pretty print limit for columns used by some table (CSV) commands',wd_commands,100),'.'(preference('MAX_TRACES',nat,'Max. number of traces generated',trace_generator,100),'.'(preference('TRACES_TIME_OUT',nat,'Timeout for trace generation',trace_generator,2147483646),'.'(preference('MC_DC_Level',nat,'Default Predicate Expansion Level for MC/DC Coverage Analyses (0=no expansion, 1=only top level connective expanded,...)',mc_dc_commands,2),[])))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),[]))\n";
		PrologTermGenerator.toPrologTerm(ProBResultParser.parse(text));
		bh.consume(text);
	}
}
